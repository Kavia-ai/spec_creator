#!/bin/bash

# Function to check for frameworks in a given directory
check_frameworks() {
  local DIR=$1
  local language=""
  local framework=""

  echo "Analyzing directory: $DIR"

  echo "Checking for Python frameworks..."
  if grep -r "from flask import\|app = Flask" --include="*.py" $DIR > /dev/null; then
    language="python"
    framework="flask"
  elif grep -r "from fastapi import\|app = FastAPI" --include="*.py" $DIR > /dev/null; then
    language="python"
    framework="fastapi"
  elif [ -f "$DIR/manage.py" ] && grep -r "django" --include="*.py" $DIR > /dev/null; then
    language="python"
    framework="django"
  fi

  echo "Checking for Ruby frameworks..."
  if [ -f "$DIR/Gemfile" ] && grep "rails" "$DIR/Gemfile" > /dev/null; then
    language="ruby"
    framework="ruby-on-rails"
  fi

  echo "Checking for Java frameworks..."
  if [ -f "$DIR/pom.xml" ] && grep -i "spring" "$DIR/pom.xml" > /dev/null; then
    language="java"
    framework="spring"
  fi

  echo "Checking for Node.js frameworks..."
  if [ -f "$DIR/package.json" ] && grep -i "express" "$DIR/package.json" > /dev/null; then
    language="javascript"
    framework="express.js"
  elif [ -f "$DIR/package.json" ] && grep -i "next" "$DIR/package.json" > /dev/null; then
    language="javascript"
    framework="next.js"
  fi

  if [ -n "$framework" ]; then
    echo "{ 'path': '$DIR', 'language': '$language', 'framework': '$framework' }" >> swagger.config.json
  fi
}

# Main script logic
DIR=${1:-.}
# Clear the config file before writing
echo "[" > swagger.config.json
check_frameworks "$DIR"

# If no framework is found in the main directory, check subdirectories
if [ -z "$framework" ]; then
  for subdir in "$DIR"/*/; do
    check_frameworks "$subdir"
  done
fi
# Close the JSON array
echo "]" >> swagger.config.json
